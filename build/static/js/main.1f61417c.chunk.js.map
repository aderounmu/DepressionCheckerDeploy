{"version":3,"sources":["components/Wave-10s-1528px.svg","components/Navigation.js","components/Loader.js","components/DashboardLayout.js","Pages/Dashboard.js","components/Usernameinput.js","components/Textinput.js","Pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","Navbar","bg","variant","className","to","style","color","Loader","Row","Col","sm","lg","md","class","getCallback","callback","word","event","isActive","element","target","select","on","transition","attr","callbacks","getWordColor","value","getWordTooltip","text","onWordClick","onWordMouseOut","onWordMouseOver","DashboardLayout","useState","itemRange","setfilterValue","AverageLabel","Average","top","colors","username","filtered","filter","Form","Control","as","onChange","e","setfilter","Years","map","item","clasName","Card","Body","Title","Text","width","aspect","data","PieData","cx","cy","startAngle","endAngle","innerRadius","outerRadius","fill","paddingAngle","dataKey","entry","index","key","height","PositiveCount","LineData","type","dot","stroke","strokeWidth","NegativeCount","margin","right","left","bottom","words","WordCloud","Table","striped","bordered","hover","size","rawData","slice","date","time","sentiment","Dashboard","payload","payl","Number","Promise","resolve","setState","then","filtering","getDatePermonth","filterPositiveandNegative","generateDataForGraphs","state","DataperYear","allPositive","allNegative","filterData","filterDataPerMonth","filterNegative","filterPositive","forPieChart","ListYears","forLineChart","forWordCloud","filterAverage","Loaded","error","this","length","toFixed","create_index","dataBymonth","months","forEach","inputIndex","findIndex","Date","getMonth","push","sort","a","b","dataBydate","years","getFullYear","total","console","log","clouddata","cloudword","split","w","replace","substring","toLowerCase","trim","name","Positive","Negative","values","dataForPie","dataforLines","setAverage","dataforWordCloud","fetch","method","headers","response","ok","json","reject","catch","error_message","status","history","pathname","isError","getDataPerYear","fetchData","getPositiveandNegativeData","params","match","setTimeout","LoadData","Container","renderDashboard","src","background","alt","Component","Usernameinput","styles","inputGroupText","borderRadius","input","InputGroup","Prepend","id","FormControl","placeholder","aria-label","aria-describedby","getInputValue","Textinput","Home","inputValue","checkChange","isTweet","handleModalClose","Result","isResult","preventDefault","undefined","location","res","Object","keys","border","Header","Modal","show","onHide","backdrop","keyboard","closeButton","fluid","onSubmit","bind","Group","controlId","Check","checked","label","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1f61417c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Wave-10s-1528px.4b031cb8.svg\";","import React from 'react'\r\nimport {Navbar} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navigation(props){\r\n\r\n\tconst styles = {\r\n\t    icon:{color: '#2196f3'}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Navbar bg=\"light\" variant=\"light\" className=\"myNav py-md-3 shadow-sm\">\r\n\t\t\t  <Link to=\"/\" className=\"h3 text-decoration-none mx-auto text-center font-weight-light\" style={styles.icon}>Depression Checker</Link>\r\n\t\t</Navbar>\r\n\t)\r\n\t\r\n}","import React from 'react'\r\nimport './Loader.css'\r\nimport {Row, Col } from 'react-bootstrap'\r\n\r\nexport default function Loader(){\r\n\treturn(\r\n\t\t<Row className=\"justify-content-center mx-auto mt-5\">\r\n\t\t\t<Col sm={7} lg={9} md={9}>\r\n\t\t\t\t<div className=\"Loader mx-auto w-25\">\r\n\t\t\t\t\t<div class=\"loadingio-spinner-dual-ring-oj24885vggh\"><div class=\"ldio-9si48d024dq\">\r\n\t\t\t\t\t<div></div><div><div></div></div>\r\n\t\t\t\t\t</div></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"LoaderText\">\r\n\t\t\t\t\t\t<div className=\"h6 text-center\">Please give us a moment while we get things ready</div>\r\n\t\t\t\t\t\t<div className=\"text-center\">This might take some few minutes</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t)\r\n}","import React, {useState ,useEffect}from 'react'\r\nimport { Container , Col , Row , Card,Table , Form , Badge} from 'react-bootstrap'\r\nimport { ResponsiveContainer,LineChart,XAxis,YAxis,CartesianGrid,Tooltip,Line,Legend , PieChart , Pie} from'recharts'\r\nimport { Cell, LabelList } from 'recharts'\r\nimport ReactWordcloud from 'react-wordcloud'\r\nimport 'd3-transition';\r\nimport { select } from 'd3-selection';\r\n\r\n\r\nfunction getCallback(callback) {\r\n  return function(word, event) {\r\n    const isActive = callback !== 'onWordMouseOut';\r\n    const element = event.target;\r\n    const text = select(element);\r\n    text\r\n      .on('click', () => {\r\n        return 0\r\n      })\r\n      .transition()\r\n      .attr('background', 'white')\r\n      .attr('font-size', isActive ? '300%' : '100%')\r\n      .attr('text-decoration', isActive ? 'underline' : 'none');\r\n  };\r\n}\r\n\r\nconst callbacks = {\r\n  getWordColor: word => (word.value > 25 ? '#39a4fa' : '#f32151'),\r\n  getWordTooltip: word =>\r\n    `The word \"${word.text}\" appears ${word.value} times.`,\r\n  onWordClick: getCallback('onWordClick'),\r\n  onWordMouseOut: getCallback('onWordMouseOut'),\r\n  onWordMouseOver: getCallback('onWordMouseOver'),\r\n};\r\n\r\n\r\nexport default function DashboardLayout(props){\r\n\r\n\tconst[ itemRange, setitemRange] = useState(20)\r\n\tconst[filterValue,setfilterValue] = useState(null)\r\n\r\n\tconst style ={\r\n\t\tAverageLabel:{\r\n\t\t\tcolor : props.Average > 0.5 ? '#39a4fa': '#f32151',\r\n\t\t\ttop : '50px'\r\n\t\t}\r\n\t}\r\n\r\n\tconst colors = ['#39a4fa','#f32151']\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t<div className=\"h1 font-weight-lighter\"> Welcome {props.username}</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm={3}>\r\n\t\t\t\t\t<div className=\"h4 text-sm-right\">{ props.filtered ? ` Data from ${props.filter}` : 'All Data'  }</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className=\"d-block d-sm-none\">\r\n\t\t\t\t{\r\n\t\t\t\t\t<Form.Control as=\"select\" onChange={(e)=>{ setfilterValue(e.target.value) ; props.setfilter(e.target.value)}}>\r\n\t\t\t\t\t\t<option>All Data</option>\r\n\t\t\t\t\t\t{props.Years.map((item)=>(<option>{item}</option>))}\r\n  \t\t\t\t\t</Form.Control>\r\n\t\t\t\t}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row clasName=\"mx-0\">\r\n\t\t\t\t<Row className=\"my-2 w-100 mx-0\">\r\n\t\t\t\t\t<Col sm={4} className=\"my-sm-0 my-2\">\r\n\t\t\t\t\t\t<Card className=\"shadow-sm border-0\">\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title>Average Sentiment</Card.Title>\r\n\t\t\t\t\t\t\t    <Card.Text>\r\n\t\t\t\t\t\t\t    \t<div className = \"h3 position-absolute\" style={style.AverageLabel}> \r\n\t\t\t\t\t\t\t    \t{props.Average}</div>\r\n\t\t\t\t\t\t\t        <ResponsiveContainer width=\"100%\" aspect={3.2}>\r\n\t\t\t\t\t\t\t\t        <PieChart>\r\n\t\t\t\t\t\t\t\t\t        <Pie\r\n\t\t\t\t\t\t\t\t\t          data={props.PieData}\r\n\t\t\t\t\t\t\t\t\t          cx=\"50%\"\r\n\t\t\t\t\t\t\t\t\t          cy=\"98%\"\r\n\t\t\t\t\t\t\t\t\t          startAngle={180}\r\n\t\t\t\t\t\t\t\t\t          endAngle={0}\r\n\t\t\t\t\t\t\t\t\t          innerRadius={30}\r\n\t\t\t\t\t\t\t\t\t          outerRadius={50}\r\n\t\t\t\t\t\t\t\t\t          fill=\"#8884d8\"\r\n\t\t\t\t\t\t\t\t\t          paddingAngle={5}\r\n\t\t\t\t\t\t\t\t\t          dataKey=\"value\"\r\n\t\t\t\t\t\t\t\t\t          \r\n\t\t\t\t\t\t\t\t\t        > \r\n\t\t\t\t\t\t\t\t\t        {\r\n\t\t\t\t\t\t\t\t\t\t        props.PieData.map((entry, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t        <Cell key={`cell-${index}`} fill={colors[index]}/>\r\n\t\t\t\t\t\t\t\t\t\t      \t)) \r\n\t\t\t\t\t\t\t\t\t\t    }\r\n\t\t\t\t\t\t\t\t\t        </Pie>\r\n\t\t\t\t\t\t\t\t\t        <Tooltip />\r\n\t\t\t\t\t\t\t\t\t        <Legend height={10}/>\r\n\t\t\t\t\t\t\t\t      </PieChart>\r\n\t\t\t\t\t\t\t        </ResponsiveContainer>\r\n\t\t\t\t\t\t\t    </Card.Text>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={4}  className=\"my-sm-0 my-2 \">\r\n\t\t\t\t\t\t<Card className=\"shadow-sm border-0\">\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t    <Card.Title>Postive</Card.Title>\r\n\t\t\t\t\t\t\t    <Card.Text>\r\n\t\t\t\t\t\t\t        <Row className=\"mx-0\">\r\n\t\t\t\t\t\t\t        \t<Col>\r\n\t\t\t\t\t\t\t        \t\t<div className=\"h3\">\r\n\t\t\t\t\t\t\t        \t\t{ props.PositiveCount}\r\n\t\t\t\t\t\t\t        \t\t</div>\r\n\t\t\t\t\t\t\t        \r\n\t\t\t\t\t\t\t        \t</Col>\r\n\t\t\t\t\t\t\t        \t<Col>\r\n\t\t\t\t\t\t\t        \t\t<ResponsiveContainer width=\"100%\" height={90}>\r\n\t\t\t\t\t\t\t        \t\t\t<LineChart data={props.LineData}>\r\n        \t\t\t\t\t\t\t\t\t\t\t<Line type='linear' dot={false} dataKey='Positive' stroke='#39a4fa' strokeWidth={2} />\r\n      \t\t\t\t\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t\t        \t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t        \t</Col>\r\n\t\t\t\t\t\t\t        </Row>\r\n\t\t\t\t\t\t\t    </Card.Text>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={4} className=\"my-sm-0 my-2\">\r\n\t\t\t\t\t\t<Card className=\"shadow-sm border-0\">\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title>Negative</Card.Title>\r\n\t\t\t\t\t\t\t    <Card.Text>\r\n\t\t\t\t\t\t\t        \t<Row className=\"mx-0\">\r\n\t\t\t\t\t\t\t\t        \t<Col>\r\n\t\t\t\t\t\t\t\t        \t\t<div className=\"h3\">\r\n\t\t\t\t\t\t\t\t        \t\t{ props.NegativeCount}\r\n\t\t\t\t\t\t\t\t        \t\t</div>\r\n\t\t\t\t\t\t\t\t        \t</Col>\r\n\t\t\t\t\t\t\t\t        \t<Col>\r\n\t\t\t\t\t\t\t\t        \t\t<ResponsiveContainer width=\"100%\" height={90}>\r\n\t\t\t\t\t\t\t\t        \t\t\t<LineChart data={props.LineData}>\r\n\t        \t\t\t\t\t\t\t\t\t\t\t<Line type='linear' dot={false} dataKey='Negative' stroke='#f32151' strokeWidth={2} />\r\n\t      \t\t\t\t\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t\t\t        \t\t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t\t        \t</Col>\r\n\t\t\t\t\t\t\t        </Row>\r\n\t\t\t\t\t\t\t    </Card.Text>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"my-2 w-100 mx-0\">\r\n\t\t\t\t\t<Col sm={8} className=\"my-sm-0 my-2\">\r\n\t\t\t\t\t\t<Card className=\"shadow-sm border-0\">\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title>\r\n\r\n\t\t\t\t\t\t\t\t<Row className=\"mx-0\">\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>Sentiment Growth</Col>\r\n\t\t\t\t\t\t\t\t\t<Col sm={3} className=\"d-none d-sm-block\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" onChange={(e)=>{ setfilterValue(e.target.value) ; props.setfilter(e.target.value)}}>\r\n    \t\t\t\t\t\t\t\t\t\t<option>All Data</option>\r\n    \t\t\t\t\t\t\t\t\t\t{props.Years.map((item)=>(<option>{item}</option>))}\r\n  \t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t\t</Card.Title>\r\n\t\t\t\t\t\t\t    <Card.Text>\r\n\t\t\t\t\t\t\t    \t<ResponsiveContainer width=\"100%\" aspect={2}>\r\n\t\t\t\t\t\t\t\t    \t<LineChart data={props.LineData}\r\n\t\t\t\t\t\t\t\t\t\t  margin={{ top: 5, right: 10, left: 5, bottom: 5 }}>\r\n\t\t\t\t\t\t\t\t\t\t  <CartesianGrid/>\r\n\t\t\t\t\t\t\t\t\t\t  <XAxis dataKey=\"name\" />\r\n\t\t\t\t\t\t\t\t\t\t  <YAxis />\r\n\t\t\t\t\t\t\t\t\t\t  <Tooltip />\r\n\t\t\t\t\t\t\t\t\t\t  <Legend />\r\n\t\t\t\t\t\t\t\t\t\t  <Line type=\"monotone\" dataKey=\"Positive\" stroke=\"#39a4fa\" strokeWidth={3}/>\r\n\t\t\t\t\t\t\t\t\t\t  <Line type=\"monotone\" dataKey=\"Negative\" stroke=\"#f32151\" strokeWidth={3} />\r\n\t\t\t\t\t\t\t\t\t\t</LineChart>\r\n\t\t\t\t\t\t\t    \t</ResponsiveContainer>\r\n\t\t\t\t\t\t\t    </Card.Text>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col sm={4}>\r\n\t\t\t\t\t\t<Card className=\"shadow-sm border-0\">\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title>Word Cloud</Card.Title>\r\n\t\t\t\t\t\t\t    <Card.Text>\r\n\t\t\t\t\t\t\t        <div style={{ height: 350, width: '90%' }}>\r\n\t\t\t\t\t\t\t\t       <ReactWordcloud callbacks={callbacks} words={props.WordCloud} />\r\n\t\t\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t\t    </Card.Text>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row className=\"my-2 w-100 mx-0\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Card className=\"shadow-sm border-0 overflow-auto\">\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title>Tweets</Card.Title>\r\n\t\t\t\t\t\t\t    <Card.Text>\r\n\t\t\t\t\t\t\t    \r\n\r\n\t\t\t\t\t\t\t\t       <Table striped bordered hover size=\"sm\">\r\n\t\t\t\t\t\t\t\t\t\t  <thead>\r\n\t\t\t\t\t\t\t\t\t\t    <tr>\r\n\t\t\t\t\t\t\t\t\t\t      <th>Date</th>\r\n\t\t\t\t\t\t\t\t\t\t      <th>Time</th>\r\n\t\t\t\t\t\t\t\t\t\t      <th>Text</th>\r\n\t\t\t\t\t\t\t\t\t\t      <th>Sentiment Value</th>\r\n\t\t\t\t\t\t\t\t\t\t    </tr>\r\n\t\t\t\t\t\t\t\t\t\t  </thead>\r\n\t\t\t\t\t\t\t\t\t\t  <tbody>\r\n\t\t\t\t\t\t\t\t\t\t    {\r\n\t\t\t\t\t\t\t\t\t\t    \tprops.rawData.slice(0,itemRange).map((item)=>(\r\n\t\t\t\t\t\t\t\t\t\t\t\t    <tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t    \t<td >{item.date}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t    <td>{item.time}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t    <td className=\"text-wrap w-25\">{item.text}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t    <td>{item.sentiment}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t    </tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t  </tbody>\r\n\t\t\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t    </Card.Text>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t)\r\n}"," import React , { Component } from 'react'\r\n import { Container , Col , Row , Card} from 'react-bootstrap'\r\n\r\nimport Navigation from '../components/Navigation.js'\r\nimport Loader from '../components/Loader.js'\r\nimport DashboardLayout from '../components/DashboardLayout.js'\r\nimport background from '../components/Wave-10s-1528px.svg'\r\n\r\n//import originalData from '../fullsampledata.js'\r\n//import originalData from '../sampledata2.js'\r\n//import originalData from '../sampledata.js'\r\n\r\n\r\n\r\n \r\n\r\n export default class Dashboard extends Component{\r\n \tconstructor(props) {\r\n\t    super(props);\r\n\t    this.state = {\r\n\t      username: '',\r\n\t      data:[],\r\n\t      DataperYear:[],\r\n\t      allPositive:[],\r\n\t      allNegative:[],\r\n\t      filter: null,\r\n\t      filterData:[{}],\r\n\t      filterDataPerMonth:[],\r\n\t      filterNegative:[],\r\n\t      filterPositive:[],\r\n\t      forPieChart:[],\r\n\t      ListYears:[],\r\n\t      forLineChart:[],\r\n        forWordCloud:[],\r\n\t      filterAverage:null,\r\n\t      Loaded: false,\r\n        error:''\r\n\t    };\r\n  \t}\r\n\r\n  \trenderDashboard(){\r\n\r\n  \t\tlet {filter,filterData , data} = this.state\r\n\r\n  \t\treturn(\r\n  \t\t\t<DashboardLayout \r\n\t  \t\t\trawData={ filter === null || filter === 'All Data'? data : filterData[0].data} \r\n\t  \t\t\tfiltered ={ filter === null || filter === 'All Data'? false : true}\r\n\t  \t\t\tusername={this.state.username}\r\n\t  \t\t\tNegativeCount={ filter === null || filter === 'All Data'? this.state.allNegative.length: this.state.filterNegative.length}\r\n\t  \t\t\tPositiveCount={ filter === null || filter === 'All Data'? this.state.allPositive.length: this.state.filterPositive.length}\r\n\t  \t\t\tPieData={this.state.forPieChart}\r\n\t  \t\t\tLineData={this.state.forLineChart}\r\n          WordCloud= {this.state.forWordCloud}\r\n\t  \t\t\tfilter={filter}\r\n\t  \t\t\tsetfilter={this.setfilter}\r\n\t  \t\t\tYears={ this.state.ListYears}\r\n          Average={this.state.filterAverage.toFixed(2)}\r\n  \t\t\t/>\r\n  \t\t)\r\n  \t}\r\n\r\n  \t//\r\n  \t/*Our Filtering event */\r\n  \tsetfilter = (payload) => {\r\n\r\n  \t\tlet payl = payload\r\n\r\n  \t\tif(payl !== 'All Data'){\r\n  \t\t\t payl = Number(payl)\r\n  \t\t}else{\r\n  \t\t\tpayl = 'All Data'\r\n  \t\t}\r\n\r\n  \t\tlet res1 = new Promise ( (resolve) =>{this.setState({filter:payl}) ; resolve()})\r\n  \t\t.then(()=>{\r\n  \t\t\tthis.filtering()\r\n  \t\t})\r\n  \t\t.then(()=>{\r\n  \t\t\tthis.getDatePermonth() //remove if not needed later\r\n  \t\t})\r\n  \t\t.then(()=>{\r\n  \t\t\tthis.filterPositiveandNegative()\r\n  \t\t})\r\n  \t\t.then(()=>{\r\n  \t\t\tthis.generateDataForGraphs()\r\n  \t\t})\r\n  \t}\r\n  \r\n\r\n\r\n  \tgetDatePermonth(){\r\n  \t\tlet filter = this.state.filter \r\n  \t\tlet create_index = 0;\r\n  \t\tlet dataBymonth = []\r\n        let months = []\r\n\r\n  \t\tif(!(filter === null || filter === 'All Data')){\r\n  \t\t\t\r\n\t  \t\tthis.state.filterData.forEach((element)=>{\r\n\t\t    \telement.data.forEach((element)=>{\r\n\t\t    \t\tlet inputIndex = months.findIndex(item =>{\r\n\t\t    \t \tlet d2 = new Date(element.date).getMonth();\r\n\t\t    \t \tif (item  === d2) return true \r\n\t\t    \t \telse return false\r\n\t\t    \t })\r\n\t\t                \r\n\t\t            if(inputIndex === -1 || dataBymonth.length === 0){\r\n\t\t                dataBymonth[create_index] = {\r\n\t\t                    date: new Date(element.date).getMonth(),\r\n\t\t                    data:[]\r\n\t\t                }\r\n\t\t                dataBymonth[create_index].data.push(element)\r\n\t\t                months[create_index] = new Date(element.date).getMonth()\r\n\t\t                create_index++\r\n\t\t            }else{\r\n\t\t                dataBymonth[inputIndex].data.push(element)\r\n\t\t            }\r\n\t\t    \t})         \r\n\t        });\r\n  \t\t}\r\n      dataBymonth.sort((a,b)=>a.date-b.date)\r\n  \t\tthis.setState({filterDataPerMonth: dataBymonth})\r\n  \t\treturn dataBymonth\r\n  \t}\r\n\r\n  \tgetDataPerYear(){\r\n\r\n  \t\tlet create_index = 0;\r\n        let dataBydate = []\r\n        let years = []\r\n\t\r\n  \t\tthis.state.data.forEach((element)=>{\r\n\t    \t let inputIndex = years.findIndex(item =>{\r\n\t    \t \tlet d2 = new Date(element.date).getFullYear();\r\n\t    \t \tif (item  === d2) return true \r\n\t    \t \telse return false\r\n\t    \t })\r\n\t                \r\n\t            if(inputIndex === -1 || dataBydate.length === 0){\r\n\t                dataBydate[create_index] = {\r\n\t                    date: new Date(element.date).getFullYear(),\r\n\t                    data:[]\r\n\t                }\r\n\t                dataBydate[create_index].data.push(element)\r\n\t                years[create_index] = new Date(element.date).getFullYear()\r\n\t                create_index++\r\n\t            }else{\r\n\t                dataBydate[inputIndex].data.push(element)\r\n\t            }\r\n                    \r\n        });\r\n        dataBydate.sort((a,b)=>a.date-b.date)\r\n\r\n        this.setState({DataperYear: dataBydate})\r\n        this.setState({ListYears: years})\r\n  \t}\r\n\r\n  \tsetAverage(){\r\n  \t\tlet filter = this.state.filter \r\n  \t\tif(filter === null || filter === 'All Data'){\r\n  \t\t\tlet Average = 0 \r\n  \t\t\tlet total = 0\r\n  \t\t\tthis.state.data.forEach((element)=>{\r\n  \t\t\t\ttotal += element.sentiment\r\n  \t\t\t})\r\n  \t\t\tAverage = total/this.state.data.length\r\n  \t\t\tthis.setState({filterAverage: Average})\r\n  \t\t}else{\r\n\r\n  \t\t\tlet Average = 0\r\n  \t\t\tlet total = 0\r\n  \t\t\tthis.state.filterData.forEach((element)=>{\r\n  \t\t\t\telement.data.forEach((element)=>{\r\n  \t\t\t\t\ttotal += element.sentiment\r\n  \t\t\t\t})\r\n  \t\t\t\tAverage = total/element.data.length\r\n  \t\t\t\tthis.setState({filterAverage: Average})\r\n  \t\t\t})\r\n  \t\t}\r\n  \t}\r\n\r\n  \tfiltering(){\r\n  \t\tlet filter = this.state.filter \r\n  \t\tif(filter === null || filter === 'All Data'){\r\n  \t\t\tthis.setState({filterData : this.state.DataperYear})\r\n  \t\t\tconsole.log('filtering done')\r\n  \t\t}else{\r\n  \t\t\tlet filterData =  this.state.DataperYear.filter((element) => element.date === filter)\r\n  \t\t\tthis.setState({filterData})\r\n  \t\t}\r\n\r\n  \t}\r\n\r\n \t/** DATA FOR THE GRAPHS ***/\r\n\r\n \tgetPositiveandNegativeData(){\r\n \t\tlet allPositive = this.state.data.filter((element)=>element.sentiment >= 0.4)\r\n \t\tlet allNegative = this.state.data.filter((element)=>element.sentiment < 0.4)\r\n \t\tthis.setState({allNegative})\r\n \t\tthis.setState({allPositive})\r\n \t}\r\n\r\n \tfilterPositiveandNegative(){\r\n \t\tlet filter = this.state.filter \r\n\r\n \t\tif(!(filter === null || filter === 'All Data')){\r\n\r\n\t \t\tthis.state.filterData.forEach((item) =>{\r\n\t \t\t\tlet filterNegative = item.data.filter((element)=>element.sentiment < 0.4)\r\n\t\t \t\tlet filterPositive = item.data.filter((element)=>element.sentiment >= 0.4)\r\n\t\t \t\tthis.setState({filterPositive})\r\n\t\t \t\tthis.setState({filterNegative})\r\n\t \t\t})\r\n \t\t}\r\n \t\telse{\r\n \t\t\t//do nothing please\r\n \t\t}\r\n \t}\r\n\r\ndataforWordCloud(){\r\n  let filter = this.state.filter\r\n  let clouddata = []\r\n  if(filter === null || filter === 'All Data'){\r\n    clouddata = this.state.data.slice(0,10)\r\n  }else{\r\n      clouddata = this.state.filterData[0].data\r\n  }\r\n  let cloudword = ''\r\n  clouddata.forEach(element =>{\r\n    cloudword = cloudword + element.text\r\n  })\r\n\r\n  let words = cloudword.split(/[\\s.]+/g)\r\n    .map(w => w.replace(/^[“‘\"\\-—()\\[\\]{}]+/g, \"\"))\r\n    .map(w => w.replace(/[;:.!?()\\[\\]{},\"'’”\\-—]+$/g, \"\"))\r\n    .map(w => w.replace(/['’]s$/g, \"\"))\r\n    .map(w => w.substring(0, 30))\r\n    .map(w => w.toLowerCase())\r\n    .map(w => w.trim())\r\n    \r\n\r\n    let data = []\r\n    let create_index = 0\r\n    words.forEach((element)=>{\r\n        let inputIndex = data.findIndex((item) =>{ \r\n          if (element === item.text) return true \r\n          else return false \r\n        })\r\n                    \r\n        if(inputIndex === -1 || data.length === 0){\r\n            data[create_index] = {\r\n                text: element,\r\n                value : 1\r\n            }\r\n            create_index++\r\n        }else{\r\n            data[inputIndex].value++\r\n        }\r\n    })\r\n    \r\n\r\n    this.setState({forWordCloud: data})\r\n}\r\n\r\n \tdataForPie(){\r\n \t\tlet filter = this.state.filter\r\n \t\tif(filter === null || filter === 'All Data'){\r\n\r\n \t\t\tlet data = [\r\n \t\t\t\t{name:'Positive', value: this.state.allPositive.length},\r\n \t\t\t\t{name:'Negative', value: this.state.allNegative.length}\r\n \t\t\t]\r\n \t\t\tthis.setState({forPieChart: data})\r\n \t\t}else{\r\n \t\t\tlet data = [\r\n \t\t\t\t{name:'Positive', value: this.state.filterPositive.length },\r\n \t\t\t\t{name:'Negative', value: this.state.filterNegative.length}\r\n \t\t\t]\r\n \t\t\tthis.setState({forPieChart: data})\r\n \t\t}\r\n }\r\n\r\n \tdataforLines(){\r\n \t\tlet filter = this.state.filter\r\n \t\t\r\n \t\tif(filter === null || filter === 'All Data'){\r\n \t\t\tlet data= [];\r\n \t\t\tthis.state.filterData.forEach((element)=>{\r\n\r\n \t\t\t\tlet Positive = element.data.filter((element)=>element.sentiment >= 0.4).length\r\n \t\t\t\tlet Negative = element.data.filter((element)=>element.sentiment < 0.4).length\r\n \t\t\t\tlet values = {\r\n \t\t\t\t\tname: element.date,\r\n \t\t\t\t\tPositive : Positive,\r\n \t\t\t\t\tNegative : Negative\r\n \t\t\t\t}\r\n \t\t\t\tdata.push(values)\t\r\n \t\t\t})\r\n\r\n \t\t\tthis.setState({forLineChart: data})\r\n\r\n \t\t}else{\r\n\r\n \t\t\tlet data = []\r\n      var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\r\n \t\t\tthis.state.filterDataPerMonth.forEach((element)=>{\r\n\r\n \t\t\t\tlet Positive = element.data.filter((element)=>element.sentiment >= 0.4).length\r\n \t\t\t\tlet Negative = element.data.filter((element)=>element.sentiment < 0.4).length\r\n \t\t\t\tlet values = {\r\n \t\t\t\t\tname: months[element.date],\r\n \t\t\t\t\tPositive : Positive,\r\n \t\t\t\t\tNegative : Negative\r\n \t\t\t\t}\r\n \t\t\t\tdata.push(values)\t\r\n \t\t\t})\r\n\r\n \t\t\tthis.setState({forLineChart: data})\r\n \t\t}\r\n\r\n \t}\r\n\r\n \tgenerateDataForGraphs(){\r\n \t\tthis.dataForPie()\r\n \t\tthis.dataforLines()\r\n \t\tthis.setAverage()\r\n    this.dataforWordCloud()\r\n \t}\r\n\r\n    fetchData(){\r\n\r\n       return \r\n    }\r\n    \r\n  \tLoadData(){\r\n  \t\t// let mypromise = new Promise(\r\n  \t\t// \tresolve =>{\r\n  \t\t// \t\tsetTimeout(() => {\r\n  \t\t// \t\t\tthis.setState({data: originalData.data})\r\n  \t\t// \t\t\tresolve()\r\n\t\t\t\t// }, 3000);\r\n  \t\t// })\r\n      fetch(`/api/tweets/${this.state.username}`,{method: 'GET',headers:{'Content-Type':'application/json'}})\r\n      .then((response) => {\r\n        if(response.ok) return response.json()\r\n        else return Promise.reject(response)\r\n      })\r\n      .then((data)=>{\r\n          this.setState({data:data.data})\r\n      })\r\n      .catch((error)=>{\r\n        let error_message = ''\r\n          if(error.status === 403){\r\n            error_message = 'This user doesnt exist or has no tweets'\r\n          }else{\r\n            error_message = 'Something Went wrong, Please Try Again'\r\n          }\r\n          this.setState({error : error_message})\r\n          this.props.history.push({\r\n            pathname: '/',\r\n            state: { isError: true , error: error_message}\r\n          })\r\n          return Promise.reject()\r\n      })\r\n  \t\t.then(()=>{\r\n  \t\t\tthis.getDataPerYear()\r\n  \t\t})\r\n      .then(()=>{\r\n        if(this.state.ListYears.length === 1){\r\n          this.setfilter(this.state.ListYears[0])\r\n        }\r\n      })\r\n  \t\t.then(()=>{\r\n  \t\t\tthis.filtering()\r\n  \t\t})\r\n      .then(()=>{\r\n        this.fetchData()\r\n      })\r\n  \t\t.then(()=>{\r\n  \t\t\tthis.getDatePermonth() //remove if not needed later\r\n  \t\t})\r\n  \t\t.then(()=>{\r\n  \t\t\tthis.getPositiveandNegativeData()\r\n  \t\t\tthis.filterPositiveandNegative()\r\n  \t\t})\r\n  \t\t.then(()=>{\r\n  \t\t\tthis.generateDataForGraphs()\r\n  \t\t})\r\n  \t\t.then(()=>{\r\n  \t\t\tthis.setState({Loaded : true})\r\n  \t\t})\r\n  \t}\r\n \tcomponentDidMount(){\r\n \t\tconst {match:{params}} = this.props;\r\n    let mypromise = new Promise(\r\n       resolve =>{\r\n         setTimeout(() => {\r\n           this.setState({ username : params.username})\r\n           resolve()\r\n        }, 500);\r\n      })\r\n      .then(()=>{\r\n        this.LoadData()\r\n      })\r\n \t}\r\n \trender(){\r\n \t\tconst {filterData , DataperYear , Loaded} = this.state\r\n \t\treturn(\r\n \t\t\t<div>\r\n \t\t\t\t<Navigation className=\"w-100\"/>\r\n \t\t\t\t<Container className=\"pt-3\">\r\n \t\t\t\t\t\t{\r\n \t\t\t\t\t\t\t !Loaded ?  <Row className=\"pt-3\"><Loader/></Row> : this.renderDashboard()\r\n \t\t\t\t\t\t}\r\n \t\t\t\t</Container>\r\n        { \r\n          !Loaded ? <div className=\"fixed-bottom w-100 background-container\"><img src={background} className=\"background position-absolute w-100\"  alt=\"logo\"/></div> : ''\r\n        }\r\n \t\t\t</div>\r\n \t\t)\r\n \t}\r\n }\r\n\r\n ","import React, {useState}from 'react'\r\nimport {InputGroup, FormControl,Row} from 'react-bootstrap'\r\n\r\nexport default function Usernameinput(props){\r\n\r\n\tconst[ value, setValue] = useState('')\r\n\r\n\tconst styles = {\r\n\t\tinputGroupText:{\r\n\t\t\tborderRadius:'50rem 0rem 0rem 50rem'\r\n\t\t},\r\n\t\tinput:{\r\n\t\t\tborderRadius:'0rem 50rem 50rem 0rem'\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\r\n\t\t<Row>\r\n\t\t\t<InputGroup className=\"mb-3\" >\r\n\t    \t\t<InputGroup.Prepend>\r\n\t      \t\t\t<InputGroup.Text id=\"inputGroup-sizing-sm\" style={styles.inputGroupText}>@</InputGroup.Text>\r\n\t   \t\t\t</InputGroup.Prepend>\r\n\t\t    \t<FormControl\r\n\t\t    \tstyle={styles.input}\r\n\t\t      \tplaceholder=\"Username\"\r\n\t\t      \taria-label=\"Username\"\r\n\t\t      \taria-describedby=\"basic-addon1\"\r\n\t\t      \tvalue={props.value}\r\n\t\t      \t//onChange={(e)=>setValue(e.target.value)}\r\n\t\t      \tonChange={(e)=>{props.getInputValue(e.target.value)}}\r\n\t\t    \t/>\r\n\t  \t\t</InputGroup>\r\n\t\t</Row>\r\n\r\n\t)\r\n\t\r\n} ","import React  from 'react'\r\nimport {Form,Row} from 'react-bootstrap'\r\n\r\nexport default function Textinput(props){\r\n\treturn(\r\n\t\t<Row>\r\n    \t\t<Form.Control \r\n    \t\tclassName=\"rounded-pill\"\r\n    \t\ttype=\"text\" \r\n    \t\tplaceholder=\"Enter Text\"\r\n    \t\tvalue={props.value} \r\n    \t\tonChange={(e)=>{props.getInputValue(e.target.value)}} \r\n    \t\t />\r\n    \t</Row>\r\n\t)\r\n}","import React ,{ Component } from 'react'\r\nimport { Container , Col , Row , Form, Card , Modal } from 'react-bootstrap'\r\n\r\nimport Navigation from '../components/Navigation.js'\r\nimport Usernameinput from '../components/Usernameinput.js'\r\nimport Textinput from '../components/Textinput.js'\r\nimport background from '../components/Wave-10s-1528px.svg'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisTweet: true,\r\n\t\t\tinputValue: '',\r\n\t\t\tResult: {},\r\n\t\t\tisResult: false,\r\n\t\t\terror: false,\r\n\t\t\terror_message: ''\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetInputValue = (value) => this.setState({inputValue: value})\r\n\tcheckChange = (e) => this.setState({isTweet : !this.state.isTweet})\r\n\r\n\tonSubmit(e){\r\n\t\te.preventDefault();\r\n\t\tif(this.state.isTweet){\r\n\t\t\tthis.props.history.push(`/Dashboard/${this.state.inputValue}`)\r\n\t\t}else{\r\n\r\n\t\t\tfetch(`/api/tweet/${this.state.inputValue}`,{method: 'GET',headers:{'Content-Type':'application/json'}})\r\n\t      \t.then((response) => response.json())\r\n\t      \t.then((data)=>{\r\n\t          this.setState({Result:data.data})\r\n\t      \t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\thandleModalClose = () => this.setState({error:false})\r\n\r\n\tcomponentDidMount(){\r\n\r\n\t\tif(!(this.props.location.state === undefined)){\r\n\t\t\tthis.setState({error : this.props.location.state.isError })\r\n\t\t\tthis.setState({error_message : this.props.location.state.error })\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\trender(){\r\n\t\tlet { isTweet, inputValue ,Result} = this.state\r\n\t\tlet res = \"\"\r\n\t\t\r\n\t\tif(Object.keys(Result).length <= 0){\r\n\t\t\tres = ''\r\n\t\t}else {\r\n\t\t\tres = <Card border=\"light\">\r\n\t\t\t\t    <Card.Header> Result</Card.Header>\r\n\t\t\t\t    <Card.Body>\r\n\t\t \t\t      <Card.Title>{Result[0].text} </Card.Title>\r\n\t\t\t\t      <Card.Text>\r\n\t\t\t\t      This Text is  \r\n\t\t\t\t      <div style={{color:Result[0].value > 0.5 ? '#39a4fa' : '#f32151'}}>\r\n\t\t\t\t      { Result[0].value > 0.5 ? (Result[0].value * 100).toFixed(2) : ((1-Result[0].value)*100).toFixed(2)}\r\n\t\t\t\t      %  { Result[0].value > 0.5 ? 'Non depressive' : 'Depressive'}\r\n\t\t\t\t      </div> \r\n\t\t\t\t      \t\r\n\t\t\t\t      </Card.Text>\r\n\t\t\t\t    </Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t}\r\n\t\t\t \t\t\t\t\t\t\r\n\t\treturn (\r\n\t\t<div className=\"main\">\r\n\t\t\t{\r\n\t\t\t\t<Modal className=\"mt-5\"\r\n        \t\tshow={this.state.error}\r\n        \t\tonHide={this.handleModalClose}\r\n        \t\tbackdrop=\"static\"\r\n        \t\tkeyboard={false}\r\n      \t\t\t>\r\n        \t\t<Modal.Header closeButton>\r\n          \t\t\t<Modal.Title>{this.state.error_message}</Modal.Title>\r\n        \t\t</Modal.Header>\r\n        \t\t<Modal.Body>\r\n          \t\t\tSorry An Error Occured\r\n        \t\t</Modal.Body>\r\n\t\t\t    </Modal>\r\n\t\t\t}\r\n\t\t\t<Navigation className=\"w-100\"/>\r\n\t\t\t<Container fluid>\r\n\t\t\t \t\t<Row className=\"justify-content-center text-center\">\r\n\t\t\t \t\t  <Col sm={6}className=\"mx-auto my-5\">\r\n\r\n\t\t\t\t \t\t<div className=\"h4\">Welcome this is a simple application that utilizes twitter data to access and  analayze mental health of people</div>\r\n\t\t\t\t \t\t<div>Please input a valid twitter handle or a valid text to process</div>\r\n\t\t\t\t \t\t</Col>\r\n\t\t\t \t\t</Row>\r\n\t\t\t \t\t<Row className=\"justify-content-center text-center\">\r\n\t\t\t \t\t\t<Col lg={5} md={6} sm={6} className=\"mx-5\">\r\n\t\t\t \t\t\t<Form className=\"\" onSubmit={this.onSubmit.bind(this)}>\r\n\t\t\t \t\t\t\t<Row className=\"\">\r\n\t\t\t\t \t\t\t\t<Form.Group controlId=\"FormInput\" className=\"w-100\">\r\n\t\t\t\t\t \t\t\t\t{\r\n\t\t\t\t\t \t\t\t\t\tisTweet ? <Usernameinput getInputValue={this.getInputValue} value={inputValue}/> : <Textinput getInputValue={this.getInputValue} value={inputValue}/>\r\n\t\t\t\t\t \t\t\t\t}\r\n\r\n\t\t\t\t\t \t\t\t</Form.Group>\r\n\t\t\t \t\t\t \t</Row>\r\n\t\t\t \t\t\t \t<Row className=\"\">\r\n    \t\t\t\t\t\t\t<Col>\r\n    \t\t\t\t\t\t\t\t<Form.Group controlId=\"formcontrolText\">\r\n    \t\t\t\t\t\t\t\t\t<Form.Check \r\n    \t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n    \t\t\t\t\t\t\t\t\tchecked={isTweet}\r\n            \t\t\t\t\t\t\tonChange={this.checkChange} \r\n    \t\t\t\t\t\t\t\t\tlabel=\"Twitter\"/>\r\n    \t\t\t\t\t\t\t\t</Form.Group>\r\n    \t\t\t\t\t\t\t</Col>\r\n    \t\t\t\t\t\t\t<Col>\r\n    \t\t\t\t\t\t\t\t<Form.Group controlId=\"formcontrolTweet\">\r\n    \t\t\t\t\t\t\t\t\t<Form.Check \r\n    \t\t\t\t\t\t\t\t\tchecked={!isTweet}\r\n            \t\t\t\t\t\t\tonChange={this.checkChange}\r\n    \t\t\t\t\t\t\t\t\ttype=\"checkbox\" \r\n    \t\t\t\t\t\t\t\t\tlabel=\"Text\"/>\r\n    \t\t\t\t\t\t\t\t</Form.Group>\r\n    \t\t\t\t\t\t\t</Col>\r\n    \t\t\t\t\t\t</Row>\r\n    \t\t\t\t\t\t<Row>\r\n    \t\t\t\t\t\t\t<Col>\r\n    \t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" type=\"submit\">Check</button>\r\n    \t\t\t\t\t\t\t</Col>\r\n    \t\t\t\t\t\t</Row>\r\n\t\t\t \t\t\t</Form>\r\n\t\t\t \t\t\t</Col>\r\n\t\t\t \t\t</Row>\r\n\t\t\t \t\t<Row className=\"justify-content-center text-center\">\r\n\t\t\t \t\t\t<div className=\"Result\">\r\n\t\t\t \t\t\t\t{res}\r\n\t\t\t \t\t\t</div>\r\n\t\t\t \t\t</Row>\r\n\t\t\t</Container>\r\n\t\t\t<div className=\"fixed-bottom w-100 background-container\">\r\n\t\t\t\t<img src={background} className=\"background position-absolute w-100\"  alt=\"logo\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\r\n\t\t)\r\n\t}\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Dashboard from './Pages/Dashboard.js'\nimport Home from './Pages/Home.js'\nimport './App.scss'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/Dashboard/:username\"  exact component={Dashboard}>\n          </Route>\n          <Route path=\"/\" exact component={Home}>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}